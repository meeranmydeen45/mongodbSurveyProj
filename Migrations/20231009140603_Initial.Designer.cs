// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Survey.Api.Cloud.Core.DataBase.DBContext;

#nullable disable

namespace Survey.Api.Cloud.Core.Migrations
{
    [DbContext(typeof(SurveyDBContext))]
    [Migration("20231009140603_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Survey.Api.Cloud.Core.DataBase.Entities.Group", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Group", "Survey");
                });

            modelBuilder.Entity("Survey.Api.Cloud.Core.DataBase.Entities.InputType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("InputType", "Survey");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "TextField"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Numeric"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Dropdown"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Radio"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Checkbox"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Toggle/Digital"
                        },
                        new
                        {
                            Id = 7,
                            Name = "TextArea"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Date"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Autocomplete"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Attachment"
                        },
                        new
                        {
                            Id = 11,
                            Name = "MultiSelect Dropdown"
                        },
                        new
                        {
                            Id = 12,
                            Name = "MultiSelect Checkbox"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Complex"
                        });
                });

            modelBuilder.Entity("Survey.Api.Cloud.Core.DataBase.Entities.Option", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Key")
                        .HasColumnType("integer");

                    b.Property<long>("QuestionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Option", "Survey");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Key = 0,
                            QuestionId = 1L,
                            Value = "Residential"
                        },
                        new
                        {
                            Id = 2L,
                            Key = 1,
                            QuestionId = 1L,
                            Value = "Commercial"
                        },
                        new
                        {
                            Id = 3L,
                            Key = 0,
                            QuestionId = 2L,
                            Value = "Male"
                        },
                        new
                        {
                            Id = 4L,
                            Key = 1,
                            QuestionId = 2L,
                            Value = "Female"
                        });
                });

            modelBuilder.Entity("Survey.Api.Cloud.Core.DataBase.Entities.Project", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Project", "Survey");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Defualt"
                        });
                });

            modelBuilder.Entity("Survey.Api.Cloud.Core.DataBase.Entities.Question", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Formula")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("InputTypeId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("boolean");

                    b.Property<int?>("OrderSequence")
                        .HasColumnType("integer");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<long?>("QuestionGroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("InputTypeId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("QuestionGroupId");

                    b.ToTable("Question", "Survey");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            InputTypeId = 5,
                            IsMandatory = false,
                            ProjectId = 1L,
                            Title = "Types of Establishment"
                        },
                        new
                        {
                            Id = 2L,
                            InputTypeId = 5,
                            IsMandatory = true,
                            ProjectId = 1L,
                            Title = "Gender"
                        });
                });

            modelBuilder.Entity("Survey.Api.Cloud.Core.DataBase.Entities.Option", b =>
                {
                    b.HasOne("Survey.Api.Cloud.Core.DataBase.Entities.Question", "QuestionNavigation")
                        .WithMany("Options")
                        .HasForeignKey("QuestionId")
                        .IsRequired()
                        .HasConstraintName("[Fk_Option_QuestionId]");

                    b.Navigation("QuestionNavigation");
                });

            modelBuilder.Entity("Survey.Api.Cloud.Core.DataBase.Entities.Question", b =>
                {
                    b.HasOne("Survey.Api.Cloud.Core.DataBase.Entities.InputType", "InputTypeNavigation")
                        .WithMany("Questions")
                        .HasForeignKey("InputTypeId")
                        .IsRequired()
                        .HasConstraintName("[Fk_Question_InputTypeId]");

                    b.HasOne("Survey.Api.Cloud.Core.DataBase.Entities.Project", "ProjectNavigation")
                        .WithMany("Questions")
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("[Fk_Question_ProjectId]");

                    b.HasOne("Survey.Api.Cloud.Core.DataBase.Entities.Group", "GroupNavigation")
                        .WithMany("Questions")
                        .HasForeignKey("QuestionGroupId")
                        .HasConstraintName("[Fk_Question_QuestionGroupId]");

                    b.Navigation("GroupNavigation");

                    b.Navigation("InputTypeNavigation");

                    b.Navigation("ProjectNavigation");
                });

            modelBuilder.Entity("Survey.Api.Cloud.Core.DataBase.Entities.Group", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Survey.Api.Cloud.Core.DataBase.Entities.InputType", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Survey.Api.Cloud.Core.DataBase.Entities.Project", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Survey.Api.Cloud.Core.DataBase.Entities.Question", b =>
                {
                    b.Navigation("Options");
                });
#pragma warning restore 612, 618
        }
    }
}
